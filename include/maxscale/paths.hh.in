#pragma once
/*
 * Copyright (c) 2016 MariaDB Corporation Ab
 *
 * Use of this software is governed by the Business Source License included
 * in the LICENSE.TXT file and at www.mariadb.com/bsl11.
 *
 * Change Date: 2026-06-06
 *
 * On the date above, in accordance with the Business Source License, use
 * of this software will be governed by version 2 or later of the General
 * Public License.
 */

#include <maxscale/cdefs.h>
#include <stdlib.h>
#include <string.h>

/**
 * All of the following DEFAULT_* variables are defined in cmake/install_layout.cmake
 */
#define MXS_DEFAULT_PID_SUBPATH              "@DEFAULT_PID_SUBPATH@"
#define MXS_DEFAULT_LOG_SUBPATH              "@DEFAULT_LOG_SUBPATH@"
#define MXS_DEFAULT_DATA_SUBPATH             "@DEFAULT_DATA_SUBPATH@"
#define MXS_DEFAULT_LIB_SUBPATH              "@DEFAULT_LIB_SUBPATH@"
#define MXS_DEFAULT_SHARE_SUBPATH            "@DEFAULT_SHARE_SUBPATH@"
#define MXS_DEFAULT_CACHE_SUBPATH            "@DEFAULT_CACHE_SUBPATH@"
#define MXS_DEFAULT_LANG_SUBPATH             "@DEFAULT_LANG_SUBPATH@"
#define MXS_DEFAULT_EXEC_SUBPATH             "@DEFAULT_EXEC_SUBPATH@"
#define MXS_DEFAULT_CONFIG_SUBPATH           "@DEFAULT_CONFIG_SUBPATH@"
#define MXS_DEFAULT_CONFIG_PERSIST_SUBPATH   "@DEFAULT_CONFIG_PERSIST_SUBPATH@"
#define MXS_DEFAULT_MODULE_CONFIG_SUBPATH    "@DEFAULT_MODULE_CONFIG_SUBPATH@"
#define MXS_DEFAULT_CONNECTOR_PLUGIN_SUBPATH "@DEFAULT_CONNECTOR_PLUGIN_SUBPATH@"

/** Default file locations, configured by CMake */
#define MXS_DEFAULT_CONFIGDIR           "@DEFAULT_CONFIGDIR@"
#define MXS_DEFAULT_PIDDIR              "@DEFAULT_PIDDIR@"
#define MXS_DEFAULT_LOGDIR              "@DEFAULT_LOGDIR@"
#define MXS_DEFAULT_DATADIR             "@DEFAULT_DATADIR@"
#define MXS_DEFAULT_LIBDIR              "@DEFAULT_LIBDIR@"
#define MXS_DEFAULT_SHAREDIR            "@DEFAULT_SHAREDIR@"
#define MXS_DEFAULT_CACHEDIR            "@DEFAULT_CACHEDIR@"
#define MXS_DEFAULT_LANGDIR             "@DEFAULT_LANGDIR@"
#define MXS_DEFAULT_EXECDIR             "@DEFAULT_EXECDIR@"
#define MXS_DEFAULT_CONFIG_PERSISTDIR   "@DEFAULT_CONFIG_PERSISTDIR@"
#define MXS_DEFAULT_MODULE_CONFIGDIR    "@DEFAULT_MODULE_CONFIGDIR@"
#define MXS_DEFAULT_CONNECTOR_PLUGINDIR "@DEFAULT_CONNECTOR_PLUGINDIR@"

namespace maxscale
{
/**
 * Set the library directory. Modules will be loaded from here.
 */
void set_libdir(const char* param);

/**
 * Set the share directory
 */
void set_sharedir(const char* param);

/**
 * Set the data directory
 */
void set_datadir(const char* param);

/**
 * Set the process data directory
 */
void set_process_datadir(const char* param);

/**
 * Set the cache directory
 */
void set_cachedir(const char* param);

/**
 * Set the configuration file directory
 */
void set_configdir(const char* param);

/**
 * Set the configuration parts file directory
 */
void set_config_persistdir(const char* param);

/**
 * Set the module configuration file directory
 */
void set_module_configdir(const char* param);

/**
 * Set the log file directory
 */
void set_logdir(const char* param);

/**
 * Set the language file directory
 */
void set_langdir(const char* param);

/**
 * Set the PID file directory
 */
void set_piddir(const char* param);

/**
 * Set the executable directory. Internal processes will look for executables
 * from here.
 */
void set_execdir(const char* param);

/**
 * Set the connector plugin directory.
 */
void set_connector_plugindir(const char* param);

/**
 * Get the directory with all the modules.
 */
const char* libdir();

/**
 * Get the share directory
 */
const char* sharedir();

/**
 * Get the MaxScale data directory
 */
const char* datadir();

/**
 * Get the process specific data directory
 */
const char* process_datadir();

/**
 * Get the service cache directory
 */
const char* cachedir();

/**
 * Get the configuration file directory
 */
const char* configdir();

/**
 * Get the configuration file directory
 */
const char* config_persistdir();

/**
 * Get the module configuration file directory
 */
const char* module_configdir();

/**
 * Get the PID file directory which contains maxscale.pid
 */
const char* piddir();

/**
 * Return the log file directory
 */
const char* logdir();

/**
 * Path to the directory which contains the errmsg.sys language file
 */
const char* langdir();

/**
 * Get the directory with the executables.
 */
const char* execdir();

/**
 * Get connector plugin directory
 */
const char* connector_plugindir();
}
